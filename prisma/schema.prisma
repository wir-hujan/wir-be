// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductType {
  makanan
  minuman
}

model Employee {
  id          Int       @id @default(autoincrement())
  name        String
  username    String    @unique
  password    String
  isActive    Boolean   @default(true)
  token       String?
  loginDevice String?
  expiredAt   DateTime?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  created_by  Int?
  updated_at  DateTime? @default(now()) @updatedAt
  updated_by  Int?
  deleted_at  DateTime?
  deleted_by  Int?

  store_id Int
  Store    Store @relation(fields: [store_id], references: [id])

  role_id Int
  Role    Role? @relation(fields: [role_id], references: [id])

  EmployeeAccess EmployeeAccess[]

  @@map("employee")
}

model Role {
  id         Int       @id @default(autoincrement())
  name       String
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?

  Employee Employee[]

  @@map("role")
}

model Store {
  id          Int       @id @default(autoincrement())
  name        String
  province_id Int
  city_id     Int
  location    String    @db.Text
  isActive    Boolean
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  created_by  Int?
  updated_at  DateTime? @default(now()) @updatedAt
  updated_by  Int?
  deleted_at  DateTime?
  deleted_by  Int?

  ProductInformation ProductInformation[]
  Market             Market[]
  Employee           Employee[]

  @@map("store")
}

model Market {
  id         Int       @id @default(autoincrement())
  name       String
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?

  store_id Int
  store    Store @relation(fields: [store_id], references: [id])

  ProductMarket ProductMarket[]

  @@map("market")
}

model ProductMarket {
  id         Int       @id @default(autoincrement())
  price      Int
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?

  market_id Int
  market    Market @relation(fields: [market_id], references: [id])

  product_id Int
  product    Product @relation(fields: [product_id], references: [id])

  @@map("productmarket")
}

model Product {
  id         Int       @id @default(autoincrement())
  name       String
  code       String    @unique
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?

  type ProductType

  unit_id Int
  unit    Unit @relation(fields: [unit_id], references: [id])

  ProductInformation ProductInformation[]
  ProductMarket      ProductMarket[]

  @@map("product")
}

model Unit {
  id         Int       @id @default(autoincrement())
  name       String
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?

  Product Product[]

  @@map("unit")
}

model ProductInformation {
  id         Int       @id @default(autoincrement())
  price      Int
  stock      Int
  discount   Int
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?

  product_id Int
  product    Product @relation(fields: [product_id], references: [id])

  store_id Int
  store    Store @relation(fields: [store_id], references: [id])

  @@map("productinformation")
}

model Module {
  id         Int       @id @default(autoincrement())
  name       String
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?

  Submodule Submodule[]

  @@map("module")
}

model Submodule {
  id         Int       @id @default(autoincrement())
  name       String
  url        String    @db.Text
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?

  module_id Int
  module    Module @relation(fields: [module_id], references: [id])

  EmployeeAccess EmployeeAccess[]

  @@map("submodule")
}

model EmployeeAccess {
  id         Int       @id @default(autoincrement())
  isActive   Boolean   @default(true)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  created_by Int?
  updated_at DateTime? @default(now()) @updatedAt
  updated_by Int?
  deleted_at DateTime?
  deleted_by Int?

  submodule_id Int
  submodule    Submodule @relation(fields: [submodule_id], references: [id])

  employee_id Int
  employee    Employee @relation(fields: [employee_id], references: [id])

  @@map("employeeaccess")
}
